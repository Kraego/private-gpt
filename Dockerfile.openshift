FROM python:3.11.6-slim-bookworm AS base

# Install poetry
RUN pip install pipx
RUN python3 -m pipx ensurepath
RUN pipx install poetry
ENV PATH="/root/.local/bin:$PATH"
ENV PATH=".venv/bin/:$PATH"

# https://python-poetry.org/docs/configuration/#virtualenvsin-project
ENV POETRY_VIRTUALENVS_IN_PROJECT=true

FROM base AS dependencies
WORKDIR /home/worker/app
COPY pyproject.toml poetry.lock ./

ARG POETRY_EXTRAS="ui vector-stores-qdrant llms-ollama embeddings-ollama"
RUN poetry install --no-root --extras "${POETRY_EXTRAS}"

FROM base AS app

ENV PYTHONUNBUFFERED=1
ENV PORT=8080
ENV APP_ENV=prod
ENV PYTHONPATH="$PYTHONPATH:/home/worker/app/private_gpt/"
EXPOSE 8080

WORKDIR /home/worker/app

# Define the User ID (UID) for the non-root user
# UID 1001 is chosen to avoid conflicts with existing system users
ARG UID=1001

# Fix permissions, for openshifts random uuid assignment
RUN chgrp -R 0 /home/worker/app && chmod -R g=u /home/worker/app
RUN chown -R ${UID}:0 /home/worker/app && chmod 775 /home/worker/app

RUN mkdir /.cache
RUN chgrp -R 0 /.cache && chmod -R g=u /.cache
RUN chown -R ${UID}:0 /.cache && chmod 775 /.cache
RUN mkdir local_data
RUN chgrp -R 0 local_data && chmod -R g=u local_data
RUN chown -R ${UID}:0 local_data && chmod 775 local_data
RUN mkdir models
RUN chgrp -R 0 models && chmod -R g=u models
RUN chown -R ${UID}:0 models && chmod 775 models

COPY --chown=${UID}:0 --from=dependencies /home/worker/app/.venv/ .venv
COPY --chown=${UID}:0 private_gpt/ private_gpt
COPY --chown=${UID}:0 fern/ fern
COPY --chown=${UID}:0 *.yaml *.md ./
COPY --chown=${UID}:0 scripts/ scripts

USER ${UID}
ENTRYPOINT python -m private_gpt
